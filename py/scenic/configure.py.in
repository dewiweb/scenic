#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
The project directories look as follow:
trunk/
 * locale/ : translations
 * data/
   * glade : glade files and some images
   * themes : gtkrc files.
   * pixmaps : only the application icon for now (not the desktop's file icon)

Once installed, they look like this:
/usr/local/share/scenic
 * locale/
 * pixmaps/
 * glade/
 * themes/
 * docbook/
"""
import os

APPNAME = "scenic"
VERSION = "@PACKAGE_VERSION@"
PACKAGE_NAME = """@PACKAGE_NAME@"""
# paths:
LOCALE_DIR = os.path.join("@DATADIR@", "locale")
GLADE_DIR = os.path.join("@DATADIR@", 'scenic', 'glade')
PIXMAPS_DIR = os.path.join("@DATADIR@", 'scenic', 'pixmaps')
THEMES_DIR = os.path.join("@DATADIR@", 'scenic', "themes")
DOCBOOK_DIR = os.path.join("@DATADIR@", 'scenic', "docbook")

def replace_install_paths_with_devel_paths():
    """
    If the application is not installed, overrides the constants in this file with the uninstalled location of these directories.
    Called from the main executable.
    """
    global THEMES_DIR
    global LOCALE_DIR
    global PIXMAPS_DIR
    global GLADE_DIR
    global DOCBOOK_DIR
    # if in development mode, override the path to gettext i18n files.
    this_dir = os.path.dirname(os.path.abspath(__file__)) # trunk/py/scenic/
    py_dir = os.path.split(this_dir)[0] # trunk/py
    root_dir = os.path.split(py_dir)[0] # trunk
    #print("Changing paths so that project dir is set to %s" % (root_dir))
    # Now, override the constants:
    GLADE_DIR = os.path.join(root_dir, 'data', 'glade')
    PIXMAPS_DIR = os.path.join(root_dir, 'data', 'pixmaps')
    THEMES_DIR = os.path.join(root_dir, 'data', 'themes')
    LOCALE_DIR = os.path.join(root_dir, "po")
    DOCBOOK_DIR = os.path.join(root_dir, "doc", "docbook")
    #print("Changed paths to %s %s %s %s" % (GLADE_DIR, PIXMAPS_DIR, THEMES_DIR, LOCALE_DIR))

