#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 
# Miville
# Copyright (C) 2008 Société des arts technologiques (SAT)
# http://www.sat.qc.ca
# All rights reserved.
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# Miville is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Miville. If not, see <http://www.gnu.org/licenses/>.
"""
This script will start mivilled in the background, and will start firefox to
the miville address and port afterward.

If miville is already running, only starts firefox.
"""
import os
import sys
from re import search
from commands import getoutput
from time import sleep

if __name__ == "__main__":
    try:
        user_bin_path = os.environ['PATH'].split(os.pathsep)
    except:
        sys.stderr.write('Unable to work with PATH environnement variable')
        sys.exit(1)
    user_bin_path.insert(0, os.curdir + os.sep + os.path.curdir)
    # Searching for mivilled
    mivilled_bin = ''
    for p in user_bin_path: 
        _mivilled_bin = os.path.join(p, 'mivilled')
        if os.path.isfile(_mivilled_bin):
            # oct(5) is r-x permission for any user
            if oct(os.stat(_mivilled_bin).st_mode & 5) == oct(5):
                mivilled_bin = _mivilled_bin
    if mivilled_bin == '':
        sys.stderr.write('No mivilledd executable found')
        sys.exit(1)
    ps = getoutput('ps auwx')
    mivilled_is_running = False           
    for p in ps.split('\n'):
        line = p.split()
        try:
            matched = search('mivilled', line[11])
            if matched is not None:
                mivilled_is_running = True           
                break
        except IndexError:
            pass
    pid = os.fork()
    if pid == 0:
        # child
        sleep(2)
        os.execl("/usr/bin/firefox", "firefox", "http://localhost:8080")
        #os.execl("/usr/bin/prism", "prism", "-webapp", "miville@sat.qc.ca")
    else:
        # parent
        if mivilled_is_running is not True:   
            os.execl(mivilled_bin, "mivilled")
        else:
            os.execvp("sh", [ "sh", "-c", "echo 'mivilled is already running' | less" ])
