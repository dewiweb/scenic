#!/usr/bin/env python

# (c) Simon Piette <simonp@sat.qc.ca>
# GPLv2 or later
# This script will start mivilled in the background, and will start firefox to
# the miville address and port afterward.

import os
import sys
from re import search
from commands import getoutput
from time import sleep

try:
    user_bin_path = os.environ['PATH'].split(os.pathsep)
except:
    sys.stderr.write('Unable to work with PATH environnement variable')
    sys.exit(1)

 
user_bin_path.insert(0, os.curdir + os.sep + os.path.curdir)

# Searching for mivilled
mivilled_bin = ''
for p in user_bin_path: 
    _mivilled_bin = os.path.join(p, 'mivilled')
    if os.path.isfile(_mivilled_bin):
        # oct(5) is r-x permission for any user
        if (oct(os.stat(_mivilled_bin).st_mode & 5) == oct(5)):
            mivilled_bin = _mivilled_bin

if (mivilled_bin == ''):
    sys.stderr.write('No mivilledd executable found')
    sys.exit(1)

ps = getoutput('ps auwx')

mivilled_is_running = False           
for p in ps.split('\n'):
    line = p.split()
    try:
        matched = search('mivilled', line[11])
        if (matched is not None ):
            mivilled_is_running = True           
            break
    except IndexError:
        pass

pid = os.fork()
if (pid == 0):
    # child
    sleep(2)
    os.execl("/usr/bin/firefox", "firefox", "http://localhost:8080")
else:
    # parent
    if (mivilled_is_running is not True):   
        os.execl(mivilled_bin, "mivilled")
    else:
        os.execvp("sh", [ "sh", "-c", "echo 'mivilled is already running' | less" ])
