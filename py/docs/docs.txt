How to build the Documentation
==============================

Requirements
------------

- `Python 2.4+ <http://www.python.org>`_
- `Sphinx Python Documentation Generator <http://sphinx.pocoo.org/>`_
	It's easy to install it with the command::

		sudo easy_install sphinx

		
Build Process
-------------

To build the current documentation you only have to run this command on the
command line::

	sphinx-build path/to/docs/directory/ path/where/you/want/the/html/files/

For example, if you're in the .../trunk/py/ directory you should write::

	sphinx-build docs/ docs/_build/
	
_build is the default directory for the output HTML files.

If you want to force sphinx to rebuild everything add the -E flag to the command.


How to add a module or package to the documentation (it's not automatic)
------------------------------------------------------------------------

If you think that your module or package need is own page, you have now two options:

1. Use the generate_modules.py script::

	./generate_modules.py path_to_root_of_modules excluded_path1 excluded_path2
	
   So if you run the script from its directory (docs/) the command line should look::
	
	./generate_modules.py .. ../maugis/ ../docs/ ../test/
	
   Usually you want to exclude at least *../docs/* and *../test/*.

   This script will generate a ReST file in the *docs* directory for each module/package
   with the appropriate directives. But it will NOT generate the file if the file
   already exist. If you want to recreate it, delete it before running the script.

   The script will also (re)generate the modules index (*docs/modules.txt*).

   After running the script run the sphinx-build command to update the docs.
   
   **Notice:** I write this script so, right now, it's not bulletproof.
   Use it with caution.
	

2. Do all manually (old style)

	- add a text file in the *docs* directory named module_name.txt
	- in this file add the text you want (in ReST format)
	- add the this directive to auto-generate the documention from the docstring in the code::

		.. automodule:: name_of_module
			:members:
			:undoc-members:
			:show-inheritance:

	- add your page in the modules page *modules.txt* by adding the name of your module under the *toctree*.
	- run the sphinx-build command to update the docs.

	You can put more then one module in the same page.

	The lines under *.. automodule::* are options (see *Include documentation from docstrings* in :ref:`references` for detail).



How to add argument definitions and return type in your docstrings
------------------------------------------------------------------

To define argument definitions you have to add to your docstring for each argument (each line is optional)::

    :param argument_name: Description of a parameter
    :type argument_name: Type of a parameter

To define the return type of the method/function you have to add (each line is optional)::

	:return: Description of the return value
	:rtype: Return type
	
See *Info field lists* in :ref:`references` for more fields and details.


.. _references:

References
----------

| `Running a build <http://sphinx.pocoo.org/intro.html#running-a-build>`_
| `reStructuredText Primer <http://sphinx.pocoo.org/rest.html>`_
| `reStructuredText Markup Specification <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>`_
| `Include documentation from docstrings <http://sphinx.pocoo.org/ext/autodoc.html>`_
| `Info field lists <http://sphinx.pocoo.org/markup/desc.html#info-field-lists>`_