Test Coverage
=============

How to evaluate the coverage of your tests (unit test).
-------------------------------------------------------

1. Run your test with Twisted Trial with the *--coverage* flag::

	trial --coverage test/test_mymodule.py

2. Check the coverage result of a module by looking at the file
   _trial_temp/coverage/module_name.cover. In this file you will see the code of
   your module with each line with a statment preceded by a number, representing
   the number of times this statement was executed, or a bunch of >>>>>, telling
   you that this statement was not executed.

3. Create a summary report of each module coverage by running the
   coverage_report.py script (found in utils) with .cover files has arguments.
   That will give you the total number of statments, the number of non-executed
   statements, the percentage of coverage and the line numbers of non-executed
   statments for each module::
   
   	./coverage_report.py ../_trial_temp/coverage/mymodule.cover ../_trial_temp/coverage/othermodule.cover
   	
   Output::
   
   	mymodule.py
	-----------------------------
	Statements: 288
	Executed: 236
	Covered: 81 %
	-----------------------------
	Lines not covered:
	29-30, 125, 150, 156, 190-191, 197-206, 208-210, 217-221, 223-225, 227-228, 236-242, 279-280, 284-288, 290, 312-314, 317-319, 346
	   	
   	othermodule.py
	-----------------------------
	Statements: 131
	Executed: 20
	Covered: 15 %
	-----------------------------
	Lines not covered:
	48-49, 53, 55-63, 72, 74-78, 80-84, 94, 99, 107-109, 115-116, 118, 121-122, 125-126, 128, 134, 138-142, 144-147, 149-153, 156-157, 159-161, 165-172, 175-177, 179, 181, 183, 185, 194-197, 199-203, 205-209, 211-226, 229-230, 232-238, 240
	   	
   
You need to understand that the .cover files created are for what Trial did run.
So usually you want to run only one test a the time and then check the coverage
for its associated module.

You can also check the coverage of a module after running a batteries of tests,
because some tests can check an other module indirectly and add some coverage
this way.