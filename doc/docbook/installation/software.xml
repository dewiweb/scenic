<chapter>
<title>Software Installation</title>
   <para>A standard &app; installation always requires at least two computers with identical linux operating systems, the required libraries and development packages, and a build of the most recent release of the &app; software. </para>
   <para>The computers must meet these <ulink url="https://svn.sat.qc.ca/trac/miville/wiki/Hardware%20Requirements">minimum requirements</ulink>. </para>
   <para>Note that prior to using &app; you also need to meet the <ulink url="https://svn.sat.qc.ca/trac/miville/wiki/TestNetworkCommandLine">required network specification</ulink> 
   </para>
   <para>For <ulink url="http://scenic.sat.qc.ca/en/HelloWorld">The HelloWorld project</ulink> partners, we strongly recommend to follow our <ulink url="http://scenic.sat.qc.ca/en/HelloWorldSteps">HelloWorld Steps</ulink> page where we describe how to perform a network test between two partners. </para><sect1>
   <title>Operating System Installation</title>
   <para>&app; operates on the Linux based desktop operating system and is tested on the following Linux distribution: </para>
   <informaltable frame="all">
      <tgroup cols="2"><tbody><row>
            <entry>
               <para>Distribution</para>
            </entry>
            <entry>
               <para>Status </para>
            </entry>
         </row>
         <row>
            <entry>
               <para>Ubuntu 8.04 LTS (Hardy)</para>
            </entry>
            <entry>
               <para>Fully working </para>
            </entry>
         </row>
         <row>
            <entry>
               <para>Ubuntu 9.04 (Jaunty)</para>
            </entry>
            <entry>
               <para>Not Working </para>
            </entry>
         </row>
         <row>
            <entry>
               <para>Ubuntu 9.10 (Karmic)</para>
            </entry>
            <entry>
               <para>Working, less well tested and mostly documented </para>
            </entry>
         </row>
         <row>
            <entry>
               <para>Debian 5.0.4 (Lenny)</para>
            </entry>
            <entry>
               <para>Working, not much tested and getting more documented </para>
            </entry>
         </row>
         <row>
            <entry>
               <para>Debian (Squeze)</para>
            </entry>
            <entry>
               <para>Untested </para>
            </entry>
         </row></tbody></tgroup>
   </informaltable>
   <para>To install Ubuntu, please follow the instructions found on the <ulink url="http://www.ubuntu.com/getubuntu">Get Ubuntu</ulink> page. </para>
   <para>To install Debian, please follow the instructions found on the <ulink url="http://www.debian.org/distrib/">Get Debian</ulink> page. </para></sect1><sect1>
   
   <title>Libraries and Development Packages Installation</title>
   <para>Before performing the scenic installation, please perform an update of your linux distribution: </para>
   <programlisting>sudo aptitude update</programlisting>
   <programlisting>sudo aptitude upgrade</programlisting>
   <para/>
   <para>&app; need various package to be installed. You can have a detailed view of the required library and dependency on our <ulink url="https://svn.sat.qc.ca/trac/miville/wiki/LibraryPackage">Library and Package</ulink> page. To install the required these libraries and their dependencies run the following command in the terminal: </para>
   <para><emphasis role="strong">For Ubuntu 8.04 LTS (Hardy) install the following package:</emphasis></para>
   <table>
   <tgroup cols="1">
      <tbody>
         <row>
            <entry>sudo aptitude -R install linux-rt linux-headers-rt qjackctl build-essential subversion cvs git-core automake libtool libgtk2.0-dev libjack-dev python-dev libglu1-mesa-dev libavc1394-dev libraw1394-dev gettext gtk-doc-tools libbz2-dev liboil0.3-dev libglew1.5-dev ivtv-utils bison flex x264 vorbis-tools ffmpeg libx264-dev libxv-dev libiec61883-dev libvorbis-dev liblame-dev libasound2-dev libpulse-dev libdv4-dev libid3tag0-dev libmad0-dev python-gtk2-dev lame libxml2-dev python-twisted python-nevow doxygen libtheora-dev python-setuptools help2man python-simplejson python-pexpect gnome-themes-extra
            </entry>
         </row>
         </tbody> 
      </tgroup>
   </table>
   <para>You must download the debian sid iperf <ulink url="http://packages.debian.org/sid/iperf">version</ulink> 2.0.4-3 or 2.0.4-4 on your desktop and install it on both computers. Double click on the package to start the Ubuntu package manager installation process, or install it as root with dpkg -i ./iperf_2.0.4-3_i386.deb .</para>
   <para><emphasis role="strong">For Ubuntu 9.10 (Karmic) install the following package:</emphasis></para>

   <table>
   <tgroup cols="1">
      <tbody>
         <row>
            <entry>sudo aptitude -R install linux-rt linux-headers-rt qjackctl build-essential subversion cvs git-core automake libtool libgtk2.0-dev libjack-dev python-dev libglu1-mesa-dev libavc1394-dev libraw1394-dev gettext gtk-doc-tools libbz2-dev liboil0.3-dev libglew1.5-dev ivtv-utils bison flex x264 vorbis-tools ffmpeg libx264-dev libxv-dev libiec61883-dev libvorbis-dev libasound2-dev libpulse-dev libdv4-dev libid3tag0-dev libmad0-dev python-gtk2-dev lame libxml2-dev python-twisted python-nevow doxygen libtheora-dev python-setuptools help2man python-simplejson python-pexpect iperf libmp3lame-dev gnome-themes-extras libboost-dev libboost-thread-dev libboost-system-dev libboost-program-options-dev libasio-dev libboost-iostreams-dev libboost-filesystem-dev
            </entry>
         </row>
         </tbody> 
      </tgroup>
   </table>
   <para/>
   <para><emphasis role="strong">For Debian 5.0.4 (lenny) install the following package:</emphasis> </para>
   <table>
   <tgroup cols="1">
      <tbody>
         <row>
            <entry>sudo aptitude -R install qjackctl build-essential subversion cvs git-core automake libtool libgtk2.0-dev libjack-dev python-dev libglu1-mesa-dev libavc1394-dev libraw1394-dev gettext gtk-doc-tools libbz2-dev liboil0.3-dev libglew1.5-dev bison flex vorbis-tools ffmpeg libxv-dev libiec61883-dev libvorbis-dev libasound2-dev libpulse-dev libdv4-dev libid3tag0-dev libmad0-dev python-gtk2-dev libxml2-dev python-twisted doxygen python-setuptools help2man python-simplejson iperf gnome-themes-extras libboost1.35-dev jackd libboost-program-options1.35-dev libboost-thread1.35-dev libboost-system1.35-dev libboost-iostreams1.35-dev libboost-filesystem1.35-dev
            </entry>
         </row>
         </tbody> 
      </tgroup>
   </table>
   <para/>
   <para><emphasis role="strong">Now configure your realtime kernel</emphasis></para>
   <para>When your rt kernel is installed, execute the following commands (to get audio server to run in real time):</para>
   <programlisting>sudo su -c 'echo @audio - rtprio 20 &gt;&gt; /etc/security/limits.conf'</programlisting>
   <programlisting>sudo su -c 'echo @audio - memlock 250000 &gt;&gt; /etc/security/limits.conf'</programlisting>
   <para><emphasis role="strong">Then finally, logout and login again. </emphasis></para>
   </sect1>
   <sect1>
   <title>Building &app;</title>
   <para>To get the latest &app; version, go to <ulink url="http://scenic.sat.qc.ca/download">http://scenic.sat.qc.ca/download</ulink></para>
   <para>Extract the tarball and cd into it: </para>
   <programlisting>tar xzj scenic-0.4.x.tar.gz</programlisting>
   <programlisting>cd scenic-0.4.x</programlisting>
   <para>For Debian 5.0.4 (lenny), you need to install liblame. Please skip this step for other distributions. </para>
   <programlisting>./utils/install_lame.sh</programlisting>
   <para>To get all gstreamer tarballs and build all the gstreamer modules, from the current directory, run: </para>
   <programlisting>./utils/install_gstreamer.sh</programlisting>
   <para>This script runs each module's autogen.sh script, followed by make and sudo make install. </para>
   <para>Now type ldconfig command:</para>
   <para>For Ubuntu 8.04 LTS (Hardy) you need to install boost version 1.35. Please skip this step for other distributions.</para>
   <programlisting>./utils/boost1_35_for_hardy.sh</programlisting>
   <para><emphasis role="strong">Next, compile scenic: </emphasis></para>
   <programlisting>cd scenic</programlisting>
   <programlisting>./configure &amp;&amp; make &amp;&amp; sudo make install</programlisting></sect1><sect1>
   <title>Installing the midi component</title>
   <para>The midi component in &app; is available on the unstable branch (0.5). You can skip this if you install &app; 0.4.x and you don't want to stream midi, even with the command line. </para>
   <para>Install the python-portmidi package: <ulink url="https://bitbucket.org/aalex/pyportmidi/downloads/">https://bitbucket.org/aalex/pyportmidi/downloads/</ulink> Note: this package contains patches unavailable with the python bindings that comes with portmidi. </para>
   <para>
   </para>
   </sect1>
</chapter>
